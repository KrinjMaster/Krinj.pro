module.exports = {
  root: true,
  env: { browser: true, es2020: true, node: true },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:import/recommended',
    'plugin:react-hooks/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
  ],
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      alias: {
        map: [
          ['@', './src']
        ],
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.json'],
      },
      node: {
        paths: ['src'],
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
  ignorePatterns: [".eslintrc.cjs", 'vite.config.ts'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: true,
    tsconfigRootDir: __dirname,
  },
  plugins: [
    'react-refresh',
    'eslint-plugin-jest',
    'eslint-plugin-jsdoc',
    'eslint-plugin-node',
    'eslint-plugin-promise',
    'eslint-plugin-security',
    'eslint-plugin-simple-import-sort',
    'eslint-plugin-sonarjs',
    'eslint-plugin-sort-class-members',
    'eslint-plugin-unicorn'],
  rules: {
    quotes: [2, 'single', { allowTemplateLiterals: true }],
    'react/jsx-uses-react': 'off',
    'react/react-in-jsx-scope': 'off',
    'no-console': 'warn',
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
    '@typescript-eslint/no-non-null-assertion': 'off',
    '@typescript-eslint/no-unused-vars': [
      'warn',
      {
        argsIgnorePattern: '^_',
      },
    ],
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/no-misused-promises': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    semi: 'warn',
    'arrow-body-style': ['warn', 'as-needed'],
    'arrow-spacing': [
      'warn',
      {
        before: true,
        after: true,
      },
    ],
    'arrow-parens': ['warn', 'always'],
    'space-infix-ops': 'warn',
    'space-unary-ops': [
      'warn',
      {
        words: true,
        nonwords: false,
      },
    ],
    'comma-dangle': ['warn', 'always-multiline'], // Potential prettier conflict/duplicate
    'no-extra-semi': 'warn', // Potential prettier conflict/duplicate
    'no-var': 'error',
    'no-extra-boolean-cast': 'warn',
    'dot-notation': 'warn',
    eqeqeq: ['error', 'always', { null: 'ignore' }],
    'no-floating-decimal': 'warn',
    'no-multi-spaces': 'warn',
    'brace-style': 'warn',
    'comma-spacing': [
      'warn',
      {
        before: false,
        after: true,
      },
    ],
    'computed-property-spacing': ['warn', 'never'],
    'func-call-spacing': ['error', 'never'],
    'jsx-quotes': ['warn', 'prefer-double'],
    'key-spacing': 'warn',
    'lines-between-class-members': [
      'warn',
      'always',
      { exceptAfterSingleLine: true },
    ],
    'new-parens': 'error',
    'no-multiple-empty-lines': [
      'warn',
      {
        max: 1,
        maxEOF: 1,
        maxBOF: 0,
      },
    ],
    'no-trailing-spaces': ['warn', { ignoreComments: true }],
    'no-whitespace-before-property': 'warn',
    'object-curly-newline': ['warn', { consistent: true }],
    'object-curly-spacing': ['warn', 'always'],
    'one-var': ['warn', 'never'],
    'one-var-declaration-per-line': ['warn', 'initializations'],
    'prefer-const': 'error',
    'generator-star-spacing': [
      'warn',
      {
        before: false,
        after: true,
      },
    ],
    'object-shorthand': 'warn',
    'prefer-template': 'warn',
    'rest-spread-spacing': ['warn', 'never'],
    'template-curly-spacing': 'warn',
    'yield-star-spacing': ['warn', 'after'],
    'padding-line-between-statements': [
      'warn',
      {
        blankLine: 'always',
        prev: '*',
        next: 'return',
      },
      {
        blankLine: 'always',
        prev: '*',
        next: 'if',
      },
    ],
    'padded-blocks': ['warn', 'never'],
    'no-delete-var': 'error',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-keys': 'warn',
    'no-duplicate-case': 'error',
    'no-ex-assign': 'error',
    'no-func-assign': 'error',
    'no-invalid-regexp': 'error',
    'no-lonely-if': 'warn',
    'no-new-func': 'error',
    'no-octal': 'error',
    'no-useless-concat': 'warn',
    'no-with': 'error',
    'getter-return': ['error', { allowImplicit: true }],
    'no-alert': 'warn',
    'dot-location': ['warn', 'property'],
    'eol-last': 'warn',
    'no-array-constructor': 'error',
    'no-new': 'error',
    'no-new-object': 'error',
    'default-case': 'error',
    'no-bitwise': 'error',
    radix: 'error',
    'no-prototype-builtins': 'error',
    'no-useless-return': 'warn',
    'quote-props': ['warn', 'as-needed'], // Potential prettier conflict/duplicate

    'import/first': 'error',
    'import/newline-after-import': 'warn',
    'import/no-absolute-path': 'error',
    'import/no-amd': 'error',
    'import/no-duplicates': 'error',
    'import/no-named-default': 'error',
    'import/no-self-import': 'error',
    'import/no-useless-path-segments': 'warn',
    'import/no-unused-modules': 'warn',

    'jest/consistent-test-it': ['error', { fn: 'test' }],

    'promise/no-promise-in-callback': 'warn',
    'promise/param-names': 'warn',
    'promise/no-new-statics': 'error',
    'promise/valid-params': 'error',

    'react/jsx-closing-bracket-location': ['warn', 'tag-aligned'],
    'react/jsx-closing-tag-location': 'warn',
    'react/jsx-curly-brace-presence': [
      'warn',
      { props: 'never', children: 'ignore', propElementValues: 'always' },
    ],
    'react/jsx-curly-spacing': 'warn',
    'react/jsx-equals-spacing': 'warn',
    'react/jsx-key': 'error',
    'react/jsx-no-duplicate-props': 'error',
    'react/jsx-pascal-case': 'error',
    'react/jsx-tag-spacing': ['warn', { beforeSelfClosing: 'always' }],
    'react/jsx-wrap-multilines': [
      'warn',
      {
        declaration: 'parens-new-line',
        assignment: 'parens-new-line',
        return: 'parens-new-line',
        arrow: 'parens-new-line',
        condition: 'parens-new-line',
        logical: 'parens-new-line',
        prop: 'ignore',
      },
    ],
    'react/jsx-max-props-per-line': ['warn', { when: 'multiline' }],
    'react/no-access-state-in-setstate': 'error',
    'react/no-children-prop': 'error',
    'react/no-did-mount-set-state': 'error',
    'react/no-did-update-set-state': 'error',
    'react/no-direct-mutation-state': 'error',
    'react/no-find-dom-node': 'error',
    'react/no-is-mounted': 'error',
    'react/require-render-return': 'error',
    'react/self-closing-comp': 'warn',
    'react/style-prop-object': 'error',
    'react/jsx-uses-vars': 'error',
    'react/jsx-boolean-value': ['error', 'always'],

    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',

    'sort-class-members/sort-class-members': [
      'warn',
      {
        order: [
          '[static-properties]',
          '[static-methods]',
          '[properties]',
          '[conventional-private-properties]',
          'constructor',
          '[methods]',
          '[conventional-private-methods]',
        ],
        accessorPairPositioning: 'setThenGet',
      },
    ],
    'sonarjs/cognitive-complexity': 'warn',
    'sonarjs/elseif-without-else': 'error',
    'sonarjs/max-switch-cases': 'error',
    'sonarjs/no-all-duplicated-branches': 'error',
    'sonarjs/no-collapsible-if': 'error',
    'sonarjs/no-collection-size-mischeck': 'error',
    'sonarjs/no-duplicate-string': 'error',
    'sonarjs/no-duplicated-branches': 'error',
    'sonarjs/no-empty-collection': 'error',
    'sonarjs/no-extra-arguments': 'error',
    'sonarjs/no-gratuitous-expressions': 'error',
    'sonarjs/no-identical-conditions': 'error',
    'sonarjs/no-identical-expressions': 'error',
    'sonarjs/no-identical-functions': 'error',
    'sonarjs/no-ignored-return': 'error',
    'sonarjs/no-inverted-boolean-check': 'error',
    'sonarjs/no-nested-switch': 'error',
    'sonarjs/no-nested-template-literals': 'warn',
    'sonarjs/no-one-iteration-loop': 'error',
    'sonarjs/no-redundant-boolean': 'error',
    'sonarjs/no-redundant-jump': 'error',
    'sonarjs/no-same-line-conditional': 'error',
    'sonarjs/no-small-switch': 'warn',
    'sonarjs/no-unused-collection': 'error',
    'sonarjs/no-use-of-empty-return-value': 'error',
    'sonarjs/no-useless-catch': 'warn',
    'sonarjs/non-existent-operator': 'error',
    'sonarjs/prefer-immediate-return': 'error',
    'sonarjs/prefer-object-literal': 'error',
    'sonarjs/prefer-single-boolean-return': 'error',
    'sonarjs/prefer-while': 'error',
    'simple-import-sort/exports': 'error',
    'simple-import-sort/imports': [
      'error',
      {
        'groups': [
          // Packages `react` related packages come first.
          ['^react', '^@?\\w'],
          // Internal packages.
          ['^(@|components)(/.*|$)'],
          // Side effect imports.
          ['^\\u0000'],
          // Parent imports. Put `..` last.
          ['^\\.\\.(?!/?$)', '^\\.\\./?$'],
          // Other relative imports. Put same-folder imports and `.` last.
          ['^\\./(?=.*/)(?!/?$)', '^\\.(?!/?$)', '^\\./?$'],
          // Style imports.
          ['^.+\\.?(s?css)$']
        ]
      }
    ]
  },
}
